type AlbumTags  @model @auth(rules: [{allow: groups, groups: ["portfolio_admin"], provider: userPools}, {allow: public, operations: [read]}])  {
  id: ID!
  title: String
  privacy: String
  AlbumsHaveTags: [Albums] @manyToMany(relationName: "AlbumTagsAlbums")
}

type Albums @model @auth(rules: [{allow: groups, groups: ["portfolio_admin"], provider: userPools}, {allow: public, operations: [read]}]) {
  id: ID!
  title: String
  desc: String
  date: AWSDateTime
  Images: [Images] @hasMany(indexName: "byAlbums", fields: ["id"])
  featuredImage: Images @hasOne
  albumtagss: [AlbumTags] @manyToMany(relationName: "AlbumTagsAlbums")
  privacy: String
}

type Images @model @auth(rules: [{allow: groups, groups: ["portfolio_admin"], provider: userPools}, {allow: public, operations: [read]}]) {
  id: ID!
  title: String
  desc: String
  filename: String
  date: AWSDateTime
  albumsID: ID! @index(name: "byAlbums")
  index: Int
  width: Int
  height: Int
  url: String
}

type Url @model @auth(rules: [{allow: groups, groups: ["portfolio_admin"], provider: userPools}, {allow: public, operations: [read]}]) {
 id: ID!
 album: Albums @hasOne
}
 